// Generated by CoffeeScript 1.9.3
(function() {
  define(['./map', './sprite', './audio'], function(map, sprite, audio) {
    return {
      LoaderScene: (function() {
        function _Class(resources, onload) {
          var obj, ref, resource_count, type;
          this.resources = resources;
          this.onload = onload;
          this.loaded = {
            maps: {},
            sprites: {},
            sounds: {}
          };
          resource_count = 0;
          ref = this.resources;
          for (type in ref) {
            obj = ref[type];
            resource_count += (Object.keys(obj)).length;
          }
          this.resource_count = resource_count;
          if (resource_count <= 0) {
            throw "invalid resource count (" + resource_count + ")";
          }
          return;
        }

        _Class.prototype.start = function() {
          var Map, Sound, Sprite, callback, key, load_count, loader, obj, ref, res, target, type;
          Map = map.Map;
          Sprite = sprite.Sprite;
          Sound = audio.Sound;
          load_count = 0;
          loader = this;
          this.progress = 0;
          this.finished = false;
          callback = function() {
            ++load_count;
            loader.progress = load_count / loader.resource_count;
            if (load_count === loader.resource_count) {
              loader.finished = true;
              if (typeof loader.onload === "function") {
                loader.onload(loader.loaded);
              }
            }
          };
          ref = this.resources;
          for (type in ref) {
            obj = ref[type];
            target = this.loaded[type];
            if (type === 'maps') {
              for (key in obj) {
                res = obj[key];
                target[key] = new Map(res.name, res.script, callback);
              }
            } else if (type === 'sprites') {
              for (key in obj) {
                res = obj[key];
                target[key] = new Sprite(res, callback);
              }
            } else if (type === 'sounds') {
              for (key in obj) {
                res = obj[key];
                target[key] = new Sound(res, callback);
              }
            } else {
              throw "attempting to load unknown type " + type;
            }
          }
        };

        _Class.prototype.end = function() {};

        _Class.prototype.update = function(dt) {};

        _Class.prototype.draw = function(context) {};

        return _Class;

      })()
    };
  });

}).call(this);
