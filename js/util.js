// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    var insertionSort, time_offset, time_seen;
    time_offset = 0;
    time_seen = 0;
    insertionSort = function(ary, cmp) {
      var i, j, tmp, _i, _ref;
      if (cmp == null) {
        cmp = function(a, b) {
          if (a < b) {
            return -1;
          } else if (a === b) {
            return 0;
          } else {
            return 1;
          }
        };
      }
      for (i = _i = 1, _ref = ary.length; 1 <= _ref ? _i < _ref : _i > _ref; i = 1 <= _ref ? ++_i : --_i) {
        tmp = ary[i];
        j = i;
        while (j > 0 && (cmp(ary[j - 1], tmp)) > 0) {
          ary[j] = ary[j - 1];
          --j;
        }
        ary[j] = tmp;
      }
    };
    (function() {
      var browserRaf, canceled, targetTime, vendor, w, _i, _len, _ref;
      w = window;
      _ref = ['ms', 'moz', 'webkit', 'o'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        vendor = _ref[_i];
        if (w.requestAnimationFrame) {
          break;
        }
        w.requestAnimationFrame = w[vendor + 'RequestAnimationFrame'];
        w.cancelAnimationFrame = w[vendor + 'CancelAnimationFrame'] || w["" + vendor + "CancelRequestAnimationFrame"];
      }
      if (w.requestAnimationFrame) {
        if (w.cancelAnimationFrame) {
          return;
        }
        browserRaf = w.requestAnimationFrame;
        canceled = {};
        w.requestAnimationFrame = function(callback) {
          var id;
          return id = browserRaf(function(time) {
            if (id in canceled) {
              return delete canceled[id];
            } else {
              return callback(time);
            }
          });
        };
        w.cancelAnimationFrame = function(id) {
          return canceled[id] = true;
        };
      } else {
        targetTime = 0;
        w.requestAnimationFrame = function(callback) {
          var currentTime;
          targetTime = Math.max(targetTime + 16, currentTime = +(new Date));
          return w.setTimeout((function() {
            return callback(+(new Date));
          }), targetTime - currentTime);
        };
        w.cancelAnimationFrame = function(id) {
          return clearTimeout(id);
        };
      }
    })();
    return {
      EPSILON: 1 / (Math.pow(2, 50)),
      time: function() {
        var t;
        t = Date.now();
        if (t < time_seen) {
          time_offset += time_seen - t;
        }
        time_seen = t;
        return .001 * (t + time_offset);
      },
      persistentSort: insertionSort,
      constructBitmask: function(group_array) {
        var group, mask, _i, _len;
        mask = 0;
        for (_i = 0, _len = group_array.length; _i < _len; _i++) {
          group = group_array[_i];
          mask |= 1 << group;
        }
        return mask;
      },
      rgbToHex: function(r, g, b) {
        var toTwoDigitHex;
        toTwoDigitHex = function(v) {
          return ("00" + ((Math.min(Math.max(Math.round(v * 256), 0), 255)).toString(16))).substr(-2);
        };
        return "#" + (toTwoDigitHex(r)) + (toTwoDigitHex(g)) + (toTwoDigitHex(b));
      }
    };
  });

}).call(this);
