// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    var audio_context;
    (function() {
      var w;
      w = window;
      w.AudioContext = w.AudioContext || w.webkitAudioContext;
    })();
    audio_context = null;
    return {
      init: function() {
        if (typeof AudioContext !== "undefined" && AudioContext !== null) {
          audio_context = new AudioContext;
        } else {
          console.warn('could not initialize audio!');
        }
      },
      getAudioContext: function() {
        return audio_context;
      },
      Sound: (function() {

        function _Class(url, onload) {
          var obj, request;
          if (audio_context == null) {
            if (typeof onload === "function") {
              onload();
            }
            return;
          }
          request = new XMLHttpRequest;
          request.open('GET', url, true);
          request.responseType = 'arraybuffer';
          obj = this;
          request.onload = function() {
            return audio_context.decodeAudioData(request.response, (function(buffer) {
              obj.buffer = buffer;
              if (typeof onload === "function") {
                onload();
              }
            }), function() {
              throw 'could not load sound buffer from ' + url;
            });
          };
          request.send();
          return;
        }

        _Class.prototype.play = function(delay, looped, node) {
          var source;
          if (delay == null) {
            delay = 0;
          }
          if (looped == null) {
            looped = false;
          }
          if ((audio_context != null) && (this.buffer != null)) {
            source = audio_context.createBufferSource();
            source.buffer = this.buffer;
            source.loop = looped;
            source.connect(node || audio_context.destination);
            source.noteOn(delay + audio_context.currentTime);
            return source;
          }
          return null;
        };

        return _Class;

      })()
    };
  });

}).call(this);
