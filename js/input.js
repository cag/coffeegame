// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    return {
      buttons: {
        left: 37,
        up: 38,
        right: 39,
        down: 40,
        jump: 90
      },
      init: function() {
        var button, _results;
        _results = [];
        for (button in this.buttons) {
          _results.push(this[button] = {});
        }
        return _results;
      },
      update: function() {
        var button, updateInputHash;
        updateInputHash = function(hash) {
          if (hash.state) {
            if (hash.last_state) {
              hash.pressed = false;
            } else {
              hash.pressed = true;
            }
          } else {
            if (hash.last_state) {
              hash.released = true;
            } else {
              hash.released = false;
            }
          }
          hash.last_state = hash.state;
        };
        for (button in this.buttons) {
          updateInputHash(this[button]);
        }
      },
      handleKeyDown: function(keyCode) {
        var bcode, button, _ref;
        _ref = this.buttons;
        for (button in _ref) {
          bcode = _ref[button];
          if (keyCode === bcode) {
            this[button].state = true;
          }
        }
      },
      handleKeyUp: function(keyCode) {
        var bcode, button, _ref;
        _ref = this.buttons;
        for (button in _ref) {
          bcode = _ref[button];
          if (keyCode === bcode) {
            this[button].state = false;
          }
        }
      }
    };
  });

}).call(this);
